# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-28 08:37
from __future__ import unicode_literals

import course_mang.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teacher', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_uuid', models.CharField(max_length=200)),
                ('comment', models.TextField(max_length=150)),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_date'],
                'verbose_name': 'Comments Section',
            },
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_uuid', models.CharField(max_length=200)),
                ('course_name', models.CharField(max_length=400)),
                ('enroll_start_date', models.DateField(null=True)),
                ('enroll_end_date', models.DateField(null=True)),
                ('can_enroll', models.BooleanField(default=False)),
                ('course_start_date', models.DateField(null=True)),
                ('course_end_date', models.DateField(null=True)),
                ('course_start_time', models.TimeField(null=True)),
                ('course_end_time', models.TimeField(null=True)),
                ('course_durations', models.CharField(max_length=2)),
                ('course_sectors_and_associates', models.CharField(choices=[(b'Auto Components', b'Auto Components'), (b'Automobiles', b'Automobiles'), (b'Aviation', b'Aviation'), (b'Biotechnology', b'Biotechnology'), (b'Chemicals', b'Chemicals'), (b'Construction', b'Construction'), (b'Defence Manufacturing', b'Defence_Manufacturing'), (b'Electrical Machinery', b'Electrical_Machinery'), (b'Electronic System Design and Manufacturing', b'Electronic System Design and Manufacturing'), (b'Food Processing', b'Food Processing'), (b'IT and BPM', b'IT and BPM'), (b'Leather', b'Leather'), (b'Media and Entertainment', b'Media and Entertainment'), (b'Mining', b'Mining'), (b'Oil and Gas', b'Oil and Gas'), (b'Pharmaceuticals', b'Pharmaceuticals'), (b'Ports', b'Ports'), (b'Railways', b'Railways'), (b'Roads and Highways', b'Roads and Highways'), (b'Renewable Energy', b'Renewable Energy'), (b'Space', b'Space'), (b'Textiles', b'Textiles'), (b'Thermal Power', b'Thermal Power'), (b'Tourism and Hospitality', b'Tourism and Hospitality'), (b'Wellness', b'Wellness')], default=b'others', max_length=100)),
                ('course_demo_file', models.FileField(default=b'utb', upload_to=course_mang.models.user_directory_path)),
                ('course_demo_file_url', models.URLField(default=b'www.example.com')),
                ('course_status', models.CharField(choices=[(b'PENDING', b'Pending'), (b'DONE', b'Done'), (b'WAITING', b'Waiting')], default=b'PENDING', max_length=40)),
                ('amount', models.IntegerField(default=0)),
                ('language', models.CharField(default=b'English', max_length=50)),
                ('level', models.CharField(default=b'Not-avail', max_length=50)),
                ('effort', models.CharField(default=b'Not-avail', max_length=50)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.Teacher')),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='CourseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, default=b'EDX_demo_course_image.jpg', upload_to=b'course_demo_images')),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_image', to='course_mang.CourseDetail')),
            ],
        ),
        migrations.CreateModel(
            name='CourseInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=3000)),
                ('short_description', models.CharField(max_length=500)),
                ('objective', models.CharField(max_length=3000)),
                ('eligibility', models.CharField(max_length=3000)),
                ('crt_benefits', models.CharField(max_length=3000)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_information', to='course_mang.CourseDetail')),
            ],
            options={
                'ordering': ['updated_date'],
                'verbose_name': 'Course Information',
            },
        ),
        migrations.CreateModel(
            name='CourseVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(default=b'utb', max_length=1000, upload_to=course_mang.models.user_course_video_path)),
                ('module_name', models.CharField(max_length=200)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('video_type', models.CharField(choices=[(b'mp4', b'mp4'), (b'youtube', b'youtube'), (b'articulate', b'articulate')], default=b'MP4', max_length=40)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_uploaded_videos', to='course_mang.CourseDetail')),
            ],
            options={
                'ordering': ['-updated_date'],
                'verbose_name': 'Course Videos',
            },
        ),
        migrations.CreateModel(
            name='CourseWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_module_name', models.CharField(max_length=200, unique=True)),
                ('week_number', models.IntegerField()),
                ('module_number', models.IntegerField(default=0)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('week_uuid', models.CharField(max_length=200)),
                ('week_detail', models.CharField(max_length=900)),
                ('is_available', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_week', to='course_mang.CourseDetail')),
            ],
            options={
                'ordering': ['week_number'],
                'verbose_name': 'Course Week',
            },
        ),
        migrations.AddField(
            model_name='coursevideos',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_week_uploaded_videos', to='course_mang.CourseWeek'),
        ),
    ]
